version: 2.1

# These "CircleCI Orbs" are reusable bits of configuration that can be shared
# across projects.  See https://circleci.com/orbs/ for more information.
orbs:
  # `oss` is a local reference to the package.  The source for Apollo Orbs can
  # be found at http://github.com/apollographql/CircleCI-Orbs/.
  # We could use Renovate to bump this version via PR, but that's not set up now.
  oss: apollo/oss-ci-cd-tooling@0.0.20

commands:
  # These are the steps used for each version of Node which we're testing
  # against.  Thanks to YAMLs inability to merge arrays (though it is able
  # to merge objects), every version of Node must use the exact same steps,
  # or these steps would need to be repeated in a version of Node that needs
  # something different.  Probably best to avoid that, out of principle, though.
  common_test_steps:
    description: "Commands run on each Node.js job"
    steps:
      - checkout
      - oss/npm_clean_install_with_caching
      - run:
          command: npm run test:ci
          environment:
            JEST_JUNIT_OUTPUT_DIR: "reports/junit/"
      - store_test_results:
          path: reports/junit
      - store_artifacts:
          path: reports/junit

# Important! When adding a new job to `jobs`, make sure to define when it
# executes by also adding it to the `workflows` section below!
jobs:
  # Platform tests, each with the same tests but different platform or version.
  # The docker tag represents the Node.js version and the full list is available
  # at https://hub.docker.com/r/circleci/node/.

  NodeJS 14:
    docker:
      - image: cimg/node:14.20
    steps:
      - common_test_steps
      # We will save the results of this one particular invocation to use in
      # the publish step. Not only does this make the publishing step take less
      # time, this also ensures that a passing version gets deployed even if,
      # theoretically, rebuilding the same commit on the same version of
      # Node.js should yield the same results!
      - persist_to_workspace:
          root: .
          paths:
            - ./**

  NodeJS 16:
    docker:
      - image: cimg/node:16.18
    steps:
      - common_test_steps

  NodeJS 18:
    docker:
      - image: cimg/node:18.11.0
    steps:
      - common_test_steps

  GraphQL Types:
    description: "Assert generated GraphQL types are up to date"
    docker:
      - image: cimg/node:16.18
    steps:
      - checkout
      - oss/npm_clean_install_with_caching
      - run:
          command: npm run codegen:check

  Error code Doc:
    description: "Ensure the error code documentation is up to date"
    docker:
      - image: cimg/node:16.18
    steps:
      - checkout
      - oss/npm_clean_install_with_caching
      - run:
          command: npm run error-code-doc:check

  Hints code Doc:
    description: "Ensure the hints code documentation is up to date"
    docker:
      - image: cimg/node:16.18
    steps:
      - checkout
      - oss/npm_clean_install_with_caching
      - run:
          command: npm run hints-doc:check

# XXX We used to use this filter to only run a "Docs" job on docs branches.
#     Now we use it to disable all jobs. It's unclear if there's a simpler way
#     to do this!
common_non_publish_filters: &common_non_publish_filters
  filters:
    # Ensure every job has `tags` filters since the publish steps have tags.
    # This is some wild configuration thing that's pretty hard to figure out.
    tags:
      only: /.*/

common_publish_filters: &common_publish_filters
  filters:
    # Only run pre-publish and publish steps on specific tags.
    tags:
      only: /^publish\/[0-9]+$/
    # We want the publish to trigger on the above tag, not any branch.
    branches:
      ignore: /.*/

workflows:
  version: 2
  Build:
    jobs:
      - NodeJS 14:
          name: "JS: Node 14"
          <<: *common_non_publish_filters
      - NodeJS 16:
          name: "JS: Node 16"
          <<: *common_non_publish_filters
      - NodeJS 18:
          name: "JS: Node 18"
          <<: *common_non_publish_filters
      - GraphQL Types:
          name: "GraphQL Types (up to date)"
          <<: *common_non_publish_filters
      - Error code Doc:
          name: "Error code Doc (up to date)"
          <<: *common_non_publish_filters
      - Hints code Doc:
          name: "Hint code Doc (up to date)"
          <<: *common_non_publish_filters
      - oss/lerna_tarballs:
          name: "JS: Package tarballs"
          <<: *common_non_publish_filters
          requires:
            - "JS: Node 14"
            - "JS: Node 16"
            - "JS: Node 18"
            - "GraphQL Types (up to date)"
            - "Error code Doc (up to date)"
      - oss/dry_run:
          name: "JS: Dry-run"
          <<: *common_publish_filters
          requires:
            - "JS: Node 14"
            - "JS: Node 16"
            - "JS: Node 18"
            - "GraphQL Types (up to date)"
            - "Error code Doc (up to date)"
      - oss/confirmation:
          name: "JS: Confirmation"
          type: approval
          <<: *common_publish_filters
          requires:
            - "JS: Dry-run"
      - oss/publish:
          name: "JS: Publish"
          <<: *common_publish_filters
          requires:
            - "JS: Confirmation"
